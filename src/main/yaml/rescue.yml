incarnation: scafi

variables:
  random: &random
    min: 0
    max: 31
    step: 10
    default: 20
  range: &range
    formula: 100
  fail_probability: &fail_probability
    type: ArbitraryVariable
    parameters: [ 0.0, [ 0.0, 0.2, 0.4, 0.7 ] ]
  send: &send
    formula: >
      "send;" + fail_probability
    language: scala

_constants:
  retentionTime: &retentionTime 5.0

environment:
  type: Continuous2DEnvironment
  parameters: []
  global-programs:
    - time-distribution:
        type: DiracComb
        parameters: [ 0, 0.012 ]
      type: DangerSpawn
      parameters: [ 125, 875 ]
seeds:
  scenario: *random
  simulation: *random

network-model:
  type: ConnectWithinDistance
  parameters: [*range]

_reactions:
  - program: &program
    - time-distribution: 1
      type: Event
      actions:
        - type: RunScafiProgram
          parameters: [it.unibo.scafi.evaluation.RescueScenario, *retentionTime]
    - program: *send
  - move: &move
    - time-distribution:
        type: DiracComb
        parameters: [ 0.1, 1 ]
      type: Event
      actions: { type: MoveToTargetWithSpeed, parameters: [ destination, speed ] }

deployments:
  - type: Grid
    parameters: [250, 250, 750, 750, 75, 75, 25, 25]
    programs:
    - *program
    - *move
    contents:
      - molecule: healer
        concentration: false
      - molecule: team
        concentration: -1
  - type: Grid
    parameters: [ 300, 300, 700, 700, 175, 175, 0, 0 ]
    programs:
    - *program
    - *move
    contents:
      - molecule: healer
        concentration: true
      - molecule: team
        concentration: -1
      - molecule: speed
        concentration: 1.0
  - type: Point
    parameters: [ 500, 500 ]
    programs:
      - *program
    contents:
      - molecule: obstacle
        concentration: true
      - molecule: speed
        concentration: 1
  - type: Point
    parameters: [ 200, 200 ]
    programs:
      - *program
    contents:
      - molecule: obstacle
        concentration: true
      - molecule: speed
        concentration: 1.0
  - type: Point
    parameters: [ 800, 800 ]
    programs:
      - *program
    contents:
      - molecule: obstacle
        concentration: true
      - molecule: speed
        concentration: 1.0
export:
  - type: SnapshotExporter
    parameters: [ "snapshots", "rescue", 10, 10 ]
    data: [ ]
  - type: CSVExporter
    parameters:
      exportPath: "data"
      fileNameRoot: "rescue"
      interval: 1.0
    data:
    - time
    - molecule: avgDistanceTeam
      aggregators: [ mean ]
      value-filter: onlyfinite

    - molecule: minDistance
      aggregators: [ min ]
      value-filter: onlyfinite
    - type: InDangerExtractor

terminate:
  - type: AfterTime
    parameters: 5400